import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, F as onMount, z as afterUpdate, e as element, t as text, f as claim_element, g as children, j as claim_text, a as detach_dev, m as add_location, l as attr_dev, D as add_render_callback, o as insert_dev, p as append_dev, E as add_resize_listener, n as noop, C as binding_callbacks } from './client.9586d249.js';
import { d as d3, n as getTopGameAverage, p as sum, l as linear, e as extent, o as ordinal, T as Tableau10, i as select, j as axisBottom, m as max } from './operation.6e105956.js';

/* src/routes/steam-game/PopularityBarChart.svelte generated by Svelte v3.35.0 */
const file = "src/routes/steam-game/PopularityBarChart.svelte";

function create_fragment(ctx) {
	let div;
	let h2;
	let t;
	let div_resize_listener;

	const block = {
		c: function create() {
			div = element("div");
			h2 = element("h2");
			t = text("Overall Game Popularity (Top 10)");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h2 = claim_element(div_nodes, "H2", {});
			var h2_nodes = children(h2);
			t = claim_text(h2_nodes, "Overall Game Popularity (Top 10)");
			h2_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 76, 4, 2466);
			attr_dev(div, "class", "bar svelte-1btm5n3");
			add_render_callback(() => /*div_elementresize_handler*/ ctx[9].call(div));
			add_location(div, file, 75, 0, 2388);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h2);
			append_dev(h2, t);
			/*div_binding*/ ctx[8](div);
			div_resize_listener = add_resize_listener(div, /*div_elementresize_handler*/ ctx[9].bind(div));
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			/*div_binding*/ ctx[8](null);
			div_resize_listener();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("PopularityBarChart", slots, []);
	let barChartEl;
	let barChartWidth;
	let { onMouseOver } = $$props;
	let { onMouseOut } = $$props;
	let { onClickChartArea } = $$props;
	let { focusedData } = $$props;
	let { selectedData } = $$props;
	let { rawData } = $$props;

	onMount(async () => {
		const topAverage = getTopGameAverage(rawData);
		const topSum = sum(topAverage, data => data.avg);
		const x = linear().range([0, barChartWidth]).domain(extent(topAverage, d => d.avg));
		const color = ordinal(Tableau10);
		select(barChartEl).append("svg").attr("viewBox", [0, 0, barChartWidth, 25]).style("height", "auto").append("g").attr("transform", `translate(0, 0)`).call(axisBottom(x).tickSizeOuter(0)).style("color", "#f2f2f2").select(".tick").remove();

		select(barChartEl).selectAll("div").data(topAverage).enter().append("div").style("background-color", function (d, i) {
			const percentage = d.avg / topSum * 100;
			return percentage > 10 ? color(i) : "SlateGray";
		}).style("width", function (d) {
			const viewpointWidth = d.avg / max(topAverage, data => data.avg) * 100;
			return `${viewpointWidth}%`;
		}).text(function (d) {
			return d.gamename;
		}).on("click", onClickChartArea).on("mouseover", onMouseOver).on("mouseout", onMouseOut);
	});

	afterUpdate(() => {
		const selectedGroup = [select(barChartEl).selectAll("div")];
		const data = focusedData || selectedData;

		if (data) {
			selectedGroup.forEach(group => {
				group.filter((d, i) => i !== data.index).style("opacity", 0.5);
				group.filter((d, i) => i === data.index).style("opacity", 1);
			});
		} else {
			selectedGroup.forEach(group => {
				group.style("opacity", 1);
			});
		}
	});

	const writable_props = [
		"onMouseOver",
		"onMouseOut",
		"onClickChartArea",
		"focusedData",
		"selectedData",
		"rawData"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<PopularityBarChart> was created with unknown prop '${key}'`);
	});

	function div_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			barChartEl = $$value;
			$$invalidate(0, barChartEl);
		});
	}

	function div_elementresize_handler() {
		barChartWidth = this.clientWidth;
		$$invalidate(1, barChartWidth);
	}

	$$self.$$set = $$props => {
		if ("onMouseOver" in $$props) $$invalidate(2, onMouseOver = $$props.onMouseOver);
		if ("onMouseOut" in $$props) $$invalidate(3, onMouseOut = $$props.onMouseOut);
		if ("onClickChartArea" in $$props) $$invalidate(4, onClickChartArea = $$props.onClickChartArea);
		if ("focusedData" in $$props) $$invalidate(5, focusedData = $$props.focusedData);
		if ("selectedData" in $$props) $$invalidate(6, selectedData = $$props.selectedData);
		if ("rawData" in $$props) $$invalidate(7, rawData = $$props.rawData);
	};

	$$self.$capture_state = () => ({
		d3,
		onMount,
		afterUpdate,
		getTopGameAverage,
		barChartEl,
		barChartWidth,
		onMouseOver,
		onMouseOut,
		onClickChartArea,
		focusedData,
		selectedData,
		rawData
	});

	$$self.$inject_state = $$props => {
		if ("barChartEl" in $$props) $$invalidate(0, barChartEl = $$props.barChartEl);
		if ("barChartWidth" in $$props) $$invalidate(1, barChartWidth = $$props.barChartWidth);
		if ("onMouseOver" in $$props) $$invalidate(2, onMouseOver = $$props.onMouseOver);
		if ("onMouseOut" in $$props) $$invalidate(3, onMouseOut = $$props.onMouseOut);
		if ("onClickChartArea" in $$props) $$invalidate(4, onClickChartArea = $$props.onClickChartArea);
		if ("focusedData" in $$props) $$invalidate(5, focusedData = $$props.focusedData);
		if ("selectedData" in $$props) $$invalidate(6, selectedData = $$props.selectedData);
		if ("rawData" in $$props) $$invalidate(7, rawData = $$props.rawData);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		barChartEl,
		barChartWidth,
		onMouseOver,
		onMouseOut,
		onClickChartArea,
		focusedData,
		selectedData,
		rawData,
		div_binding,
		div_elementresize_handler
	];
}

class PopularityBarChart extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			onMouseOver: 2,
			onMouseOut: 3,
			onClickChartArea: 4,
			focusedData: 5,
			selectedData: 6,
			rawData: 7
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "PopularityBarChart",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*onMouseOver*/ ctx[2] === undefined && !("onMouseOver" in props)) {
			console.warn("<PopularityBarChart> was created without expected prop 'onMouseOver'");
		}

		if (/*onMouseOut*/ ctx[3] === undefined && !("onMouseOut" in props)) {
			console.warn("<PopularityBarChart> was created without expected prop 'onMouseOut'");
		}

		if (/*onClickChartArea*/ ctx[4] === undefined && !("onClickChartArea" in props)) {
			console.warn("<PopularityBarChart> was created without expected prop 'onClickChartArea'");
		}

		if (/*focusedData*/ ctx[5] === undefined && !("focusedData" in props)) {
			console.warn("<PopularityBarChart> was created without expected prop 'focusedData'");
		}

		if (/*selectedData*/ ctx[6] === undefined && !("selectedData" in props)) {
			console.warn("<PopularityBarChart> was created without expected prop 'selectedData'");
		}

		if (/*rawData*/ ctx[7] === undefined && !("rawData" in props)) {
			console.warn("<PopularityBarChart> was created without expected prop 'rawData'");
		}
	}

	get onMouseOver() {
		throw new Error("<PopularityBarChart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onMouseOver(value) {
		throw new Error("<PopularityBarChart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onMouseOut() {
		throw new Error("<PopularityBarChart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onMouseOut(value) {
		throw new Error("<PopularityBarChart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClickChartArea() {
		throw new Error("<PopularityBarChart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClickChartArea(value) {
		throw new Error("<PopularityBarChart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get focusedData() {
		throw new Error("<PopularityBarChart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set focusedData(value) {
		throw new Error("<PopularityBarChart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectedData() {
		throw new Error("<PopularityBarChart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectedData(value) {
		throw new Error("<PopularityBarChart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get rawData() {
		throw new Error("<PopularityBarChart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set rawData(value) {
		throw new Error("<PopularityBarChart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default PopularityBarChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9wdWxhcml0eUJhckNoYXJ0LjRiNmM4MmJlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL3N0ZWFtLWdhbWUvUG9wdWxhcml0eUJhckNoYXJ0LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAgIGltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcbiAgICBpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG4gICAgaW1wb3J0IHsgZ2V0VG9wR2FtZUF2ZXJhZ2UgfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbiAgICBsZXQgYmFyQ2hhcnRFbDtcbiAgICBsZXQgYmFyQ2hhcnRXaWR0aDtcblxuICAgIGV4cG9ydCBsZXQgb25Nb3VzZU92ZXI7XG4gICAgZXhwb3J0IGxldCBvbk1vdXNlT3V0O1xuICAgIGV4cG9ydCBsZXQgb25DbGlja0NoYXJ0QXJlYTtcblxuICAgIGV4cG9ydCBsZXQgZm9jdXNlZERhdGE7XG4gICAgZXhwb3J0IGxldCBzZWxlY3RlZERhdGE7XG4gICAgZXhwb3J0IGxldCByYXdEYXRhO1xuXG4gICAgb25Nb3VudChhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRvcEF2ZXJhZ2UgPSBnZXRUb3BHYW1lQXZlcmFnZShyYXdEYXRhKTtcbiAgICAgICAgY29uc3QgdG9wU3VtID0gZDMuc3VtKHRvcEF2ZXJhZ2UsIChkYXRhKSA9PiBkYXRhLmF2Zyk7XG5cbiAgICAgICAgY29uc3QgeCA9IGQzXG4gICAgICAgICAgICAuc2NhbGVMaW5lYXIoKVxuICAgICAgICAgICAgLnJhbmdlKFswLCBiYXJDaGFydFdpZHRoXSlcbiAgICAgICAgICAgIC5kb21haW4oZDMuZXh0ZW50KHRvcEF2ZXJhZ2UsIChkKSA9PiBkLmF2ZykpO1xuICAgICAgICBjb25zdCBjb2xvciA9IGQzLnNjYWxlT3JkaW5hbChkMy5zY2hlbWVUYWJsZWF1MTApO1xuXG4gICAgICAgIGQzLnNlbGVjdChiYXJDaGFydEVsKVxuICAgICAgICAgICAgLmFwcGVuZCgnc3ZnJylcbiAgICAgICAgICAgIC5hdHRyKCd2aWV3Qm94JywgWzAsIDAsIGJhckNoYXJ0V2lkdGgsIDI1XSlcbiAgICAgICAgICAgIC5zdHlsZSgnaGVpZ2h0JywgJ2F1dG8nKVxuICAgICAgICAgICAgLmFwcGVuZCgnZycpXG4gICAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgwLCAwKWApXG4gICAgICAgICAgICAuY2FsbChkMy5heGlzQm90dG9tKHgpLnRpY2tTaXplT3V0ZXIoMCkpXG4gICAgICAgICAgICAuc3R5bGUoJ2NvbG9yJywgJyNmMmYyZjInKVxuICAgICAgICAgICAgLnNlbGVjdCgnLnRpY2snKVxuICAgICAgICAgICAgLnJlbW92ZSgpO1xuXG4gICAgICAgIGQzLnNlbGVjdChiYXJDaGFydEVsKVxuICAgICAgICAgICAgLnNlbGVjdEFsbCgnZGl2JylcbiAgICAgICAgICAgIC5kYXRhKHRvcEF2ZXJhZ2UpXG4gICAgICAgICAgICAuZW50ZXIoKVxuICAgICAgICAgICAgLmFwcGVuZCgnZGl2JylcbiAgICAgICAgICAgIC5zdHlsZSgnYmFja2dyb3VuZC1jb2xvcicsIGZ1bmN0aW9uIChkLCBpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGVyY2VudGFnZSA9IChkLmF2ZyAvIHRvcFN1bSkgKiAxMDA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBlcmNlbnRhZ2UgPiAxMCA/IGNvbG9yKGkpIDogJ1NsYXRlR3JheSc7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnN0eWxlKCd3aWR0aCcsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgdmlld3BvaW50V2lkdGggPVxuICAgICAgICAgICAgICAgICAgICAoZC5hdmcgLyBkMy5tYXgodG9wQXZlcmFnZSwgKGRhdGEpID0+IGRhdGEuYXZnKSkgKiAxMDA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke3ZpZXdwb2ludFdpZHRofSVgO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGQuZ2FtZW5hbWU7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm9uKCdjbGljaycsIG9uQ2xpY2tDaGFydEFyZWEpXG4gICAgICAgICAgICAub24oJ21vdXNlb3ZlcicsIG9uTW91c2VPdmVyKVxuICAgICAgICAgICAgLm9uKCdtb3VzZW91dCcsIG9uTW91c2VPdXQpO1xuICAgIH0pO1xuXG4gICAgYWZ0ZXJVcGRhdGUoKCkgPT4ge1xuICAgICAgICBjb25zdCBzZWxlY3RlZEdyb3VwID0gW2QzLnNlbGVjdChiYXJDaGFydEVsKS5zZWxlY3RBbGwoJ2RpdicpXTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGZvY3VzZWREYXRhIHx8IHNlbGVjdGVkRGF0YTtcbiAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgIHNlbGVjdGVkR3JvdXAuZm9yRWFjaCgoZ3JvdXApID0+IHtcbiAgICAgICAgICAgICAgICBncm91cC5maWx0ZXIoKGQsIGkpID0+IGkgIT09IGRhdGEuaW5kZXgpLnN0eWxlKCdvcGFjaXR5JywgMC41KTtcbiAgICAgICAgICAgICAgICBncm91cC5maWx0ZXIoKGQsIGkpID0+IGkgPT09IGRhdGEuaW5kZXgpLnN0eWxlKCdvcGFjaXR5JywgMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlbGVjdGVkR3JvdXAuZm9yRWFjaCgoZ3JvdXApID0+IHtcbiAgICAgICAgICAgICAgICBncm91cC5zdHlsZSgnb3BhY2l0eScsIDEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbjwvc2NyaXB0PlxuXG48ZGl2IGJpbmQ6dGhpcz17YmFyQ2hhcnRFbH0gYmluZDpjbGllbnRXaWR0aD17YmFyQ2hhcnRXaWR0aH0gY2xhc3M9XCJiYXJcIj5cbiAgICA8aDI+T3ZlcmFsbCBHYW1lIFBvcHVsYXJpdHkgKFRvcCAxMCk8L2gyPlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAuYmFyIHtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTMxYzI3O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAuYmFyIDpnbG9iYWwoZGl2KSB7XG4gICAgICAgIGZvbnQ6IDE0cHg7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBwYWRkaW5nOiAzcHg7XG4gICAgICAgIG1hcmdpbjogMXB4O1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuPC9zdHlsZT5cbiJdLCJuYW1lcyI6WyJkMy5zdW0iLCJkMy5zY2FsZUxpbmVhciIsImQzLmV4dGVudCIsImQzLnNjYWxlT3JkaW5hbCIsImQzLnNjaGVtZVRhYmxlYXUxMCIsImQzLnNlbGVjdCIsImQzLmF4aXNCb3R0b20iLCJkMy5tYXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUtRLFVBQVU7S0FDVixhQUFhO09BRU4sV0FBVztPQUNYLFVBQVU7T0FDVixnQkFBZ0I7T0FFaEIsV0FBVztPQUNYLFlBQVk7T0FDWixPQUFPOztDQUVsQixPQUFPO1FBQ0csVUFBVSxHQUFHLGlCQUFpQixDQUFDLE9BQU87UUFDdEMsTUFBTSxHQUFHQSxHQUFNLENBQUMsVUFBVSxFQUFHLElBQUks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
